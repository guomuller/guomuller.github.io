{
  "name": "Shadowsocks日记",
  "tagline": "shadowsocks & chacha20 & kcptun Setup on Ubuntu 14.04 x86_64",
  "body": "* Ubuntu 14.04 64位环境部署**多端口** shadowsocks 服务端\r\n\r\n* 启用相对更节约资源的 **CHACHA20** 加密\r\n\r\n* 部署更快速的 **kcptun** 服务端\r\n\r\n* 在 Android 和 Windows 环境下 **kcptun 客户端** 的配置\r\n\r\n------\r\n\r\n1. 安装必要组件\r\n\r\n    * 更新系统，安装可以直接从 apt 更新的软件：\r\n    \r\n      ```bash\r\n      apt-get update\r\n      apt-get upgrade\r\n      apt-get install build-essential python-pip m2crypto supervisor\r\n      ```\r\n      \r\n   * 安装 shadowsocks：\r\n   \r\n      ```bash\r\n      pip install shadowsocks\r\n      ```\r\n      \r\n   * 安装加密用软件 libsodium：\r\n   \r\n      ```bash\r\n      wget https://github.com/jedisct1/libsodium/releases/download/1.0.11/libsodium-1.0.11.tar.gz\r\n      tar zxvf libsodium-1.0.11.tar.gz\r\n      cd libsodium-1.0.11\r\n      ./configure\r\n      make && make check\r\n      make install\r\n      echo /usr/local/lib > /etc/ld.so.conf.d/usr_local_lib.conf\r\n      ldconfig\r\n      ```\r\n\r\n2. 部署 shadowsocks 服务端\r\n\r\n   * 编辑 shadowsocks 配置文件：\r\n   \r\n      ```bash\r\n      vi /etc/shadowsocks.json\r\n      ```\r\n      \r\n      *按`I`进入插入模式，粘贴后按`Esc`退出，*\r\n      \r\n      *光标选中需要修改的位置按`X`删除，再进入插入模式修改。*\r\n      \r\n      *最后按`Esc`退出，再输入`:wq`保存退出。*\r\n      \r\n   * 下面配置文件中1080和8080为服务端口号，后面为对应的密码，可以不同。\r\n   \r\n      ```JSON\r\n      {\r\n      \"server\":\"0.0.0.0\",\r\n      \"port_password\":\r\n      {\r\n      \"1080\":\"password1\",\r\n      \"8080\":\"password2\"\r\n      },\r\n      \"timeout\":600,\r\n      \"method\":\"chacha20\",\r\n      \"auth\": true\r\n      }\r\n      ```\r\n      \r\n   * 编辑 supervisor 的配置文件：\r\n   \r\n      ```bash\r\n      vi /etc/supervisor/conf.d/shadowsocks.conf\r\n      ```\r\n      \r\n      *如果需要选定1024内的端口号，可能必须用root用户。*\r\n      \r\n      ```JSON\r\n      [program:shadowsocks]\r\n      command=ssserver -c /etc/shadowsocks.json\r\n      autorestart=true\r\n      user=root\r\n      ```\r\n      \r\n   * 现在即可通过下面的命令启动 shadowsocks 服务端，并检查其状态：\r\n   \r\n      ```bash\r\n      supervisorctl reload\r\n      supervisorctl status\r\n      ```\r\n      \r\n   * 在 shadowsocks 客户端检查连接无误后再进入下一步。\r\n   \r\n3. kcptun 服务端的部署\r\n\r\n   * 下载安装 kcptun：\r\n   \r\n      ```bash\r\n      mkdir /root/kcptun\r\n      cd /root/kcptun\r\n      ln -sf /bin/bash /bin/sh\r\n      wget https://github.com/xtaci/kcptun/releases/download/v20161118/kcptun-linux-amd64-20161118.tar.gz\r\n      tar -zxf kcptun-linux-amd64-*.tar.gz\r\n      ```\r\n      \r\n   * 配置 kcptun 启动和停止文件：\r\n   \r\n      *启动文件无需任何修改，通过配置文件控制 kcptun 服务参数。*\r\n      \r\n      ```bash\r\n      vi /root/kcptun/start.sh\r\n      ```\r\n      \r\n      ```bash\r\n      #!/bin/bash\r\n      cd /root/kcptun/\r\n      ./server_linux_amd64 -c /root/kcptun/server-config.json > kcptun.log 2>&1 &\r\n      echo \"Kcptun started.\"\r\n      ```\r\n\r\n      \r\n      ```bash\r\n      vi /root/kcptun/stop.sh\r\n      ```\r\n      \r\n      ```bash\r\n      #!/bin/bash\r\n      echo \"Stopping Kcptun...\"\r\n      PID=`ps -ef | grep server_linux_amd64 | grep -v grep | awk '{print $2}'`\r\n      if [ \"\" !=  \"$PID\" ]; then\r\n      echo \"killing $PID\"\r\n      kill -9 $PID\r\n      fi\r\n      echo \"Kcptun stoped.\"\r\n      ```\r\n      \r\n   * 编辑 kcptun 的配置文件：\r\n   \r\n      ```bash\r\n      vi /root/kcptun/server-config.json\r\n      ```\r\n   * 下面的配置文件中，需要注意以下参数：\r\n   \r\n      **listen** 参数为 kcptun 服务的端口； **target** 参数必须为本地 shadowsocks 使用的端口之一，也就是通过 kcptun 加速的端口； **key** 参数为 kcptun 使用的密码，自行设定。其他参数参考[项目介绍](https://github.com/xtaci/kcptun/blob/master/README.md)。\r\n   \r\n      ```JSON\r\n      {\r\n      \"listen\": \":443\",\r\n      \"target\": \"127.0.0.1:1080\",\r\n      \"key\": \"password3\",\r\n      \"crypt\": \"salsa20\",\r\n      \"mode\": \"fast\",\r\n      \"mtu\": 1350,\r\n      \"sndwnd\": 1024,\r\n      \"rcvwnd\": 1024,\r\n      \"datashard\": 5,\r\n      \"parityshard\": 5,\r\n      \"dscp\": 46,\r\n      \"nocomp\": true,\r\n      \"acknodelay\": false,\r\n      \"nodelay\": 0,\r\n      \"interval\": 40,\r\n      \"resend\": 0,\r\n      \"nc\": 0,\r\n      \"sockbuf\": 4194304,\r\n      \"keepalive\": 10\r\n      }\r\n      ```\r\n\r\n   * 现在可以通过`sh /root/kcptun/start.sh`命令启动 kcptun 服务，通过`sh /root/kcptun/stop.sh`停止。\r\n\r\n   * 将 kcptun 服务设为开机启动：\r\n   \r\n      ```bash\r\n      echo \"sh /root/kcptun/start.sh\" >> /etc/rc.local\r\n      ```\r\n      \r\n4. kcptun 在 Windows 客户端上的启用与配置\r\n   \r\n   * 在[项目发布页](https://github.com/xtaci/kcptun/releases/)下载 Windows 版 kcptun 并解压缩。注意最好将 ***client_windows_amd64.exe*** 文件放在全英文路径的单独文件夹中。\r\n   \r\n   * 在上述文件夹中新建文本文档 `run.vbs`:\r\n\r\n      ```vbs\r\n      Dim RunKcptun\r\n      Set fso = CreateObject(\"Scripting.FileSystemObject\")\r\n      Set WshShell = WScript.CreateObject(\"WScript.Shell\")\r\n      currentPath = fso.GetFile(Wscript.ScriptFullName).ParentFolder.Path & \"\\\"\r\n      configFile = currentPath & \"client-config.json\"\r\n      logFile = currentPath & \"kcptun.log\"\r\n      exeConfig = currentPath & \"client_windows_amd64.exe -c \" & configFile\r\n      cmdLine = \"cmd /c \" & exeConfig & \" > \" & logFile & \" 2>&1\"\r\n      WshShell.Run cmdLine, 0, False\r\n      'WScript.Sleep 1000\r\n      'Wscript.echo cmdLine\r\n      Set WshShell = Nothing\r\n      Set fso = Nothing\r\n      WScript.quit\r\n      ```\r\n      \r\n   * 在同一文件夹中新建客户端配置文件 `client-config.json`:\r\n\r\n      注意配置文件中的以下参数必须与上面服务端的配置文件参数完全一致： *key*, *crypt*, *mode*, *mtu*, *datashard*, *parityshard*, *nocomp*。\r\n      \r\n      **localaddr** 参数为本地服务的端口号，亦即 shadowsocks 客户端中填写的端口号； **remoteaddr** 参数为 shadowsocks 服务器的 IP 地址和其 kcptun 服务的端口号。\r\n      \r\n      其他设置事项请参考[项目介绍](https://github.com/xtaci/kcptun/blob/master/README.md)。\r\n      \r\n      ```JSON\r\n      {\r\n      \"localaddr\": \":12345\",\r\n      \"remoteaddr\": \"10.10.10.10:443\",\r\n      \"key\": \"password3\",\r\n      \"crypt\": \"salsa20\",\r\n      \"mode\": \"fast\",\r\n      \"conn\": 1,\r\n      \"autoexpire\": 60,\r\n      \"mtu\": 1350,\r\n      \"sndwnd\": 128,\r\n      \"rcvwnd\": 1024,\r\n      \"datashard\": 5,\r\n      \"parityshard\": 5,\r\n      \"dscp\": 46,\r\n      \"nocomp\": true,\r\n      \"acknodelay\": false,\r\n      \"nodelay\": 0,\r\n      \"interval\": 40,\r\n      \"resend\": 0,\r\n      \"nc\": 0,\r\n      \"sockbuf\": 4194304,\r\n      \"keepalive\": 10\r\n      }\r\n      ```\r\n      \r\n   * 新建`stop.bat`文件，用于停止 kcptun 客户端。\r\n   \r\n      ```bat\r\n      taskkill /f /im client_windows_amd64.exe\r\n      ```\r\n      \r\n   * 现在即可双击`run.vbs`运行 kcptun 服务，同时打开 shadowsocks 客户端，服务器地址填写 `localhost`，服务器端口为上述 kcptun 客户端配置文件中 *localaddr* 参数的数值，密码为服务器上 shadowsocks 配置文件中设置的密码，加密方式为 *CHACHA20*。\r\n   \r\n5. 在 shadowsocks Android 客户端配置 kcptun\r\n\r\n   目前 [shadowsocks Android 客户端](https://play.google.com/store/apps/details?id=com.github.shadowsocks)已经集成了对 kcptun 的支持。\r\n   \r\n   * 在 shadowsocks Android 客户端的配置中**启用 KCP 协议**，在 **KCP端口** 中填写 kcptun 服务的端口号。\r\n   \r\n   * 在 **KCP 参数**中填写参数，**除最后一项外其他参数必须与服务端配置文件中的参数一致**。\r\n   \r\n      ```\r\n      --key password3 --crypt salsa20 --mode fast --datashard 5 --parityshard 5 --nocomp --dscp 46\r\n      ```\r\n   \r\n   * 启动 shadowsocks 客户端服务即可。\r\n   \r\n------\r\n   \r\n* 使用的项目的Github地址：\r\n\r\n***shadowsocks***: https://github.com/shadowsocks/shadowsocks\r\n\r\n***kcptun***: https://github.com/xtaci/kcptun\r\n\r\n***supervisor***: https://github.com/Supervisor/supervisor\r\n\r\n***libsodium***: https://github.com/jedisct1/libsodium\r\n\r\n***shadowsocks Android***: https://github.com/shadowsocks/shadowsocks-android",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}